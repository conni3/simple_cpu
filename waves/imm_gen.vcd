$date
	Tue Jul  1 13:19:09 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_immgen $end
$var wire 32 ! imm_out [31:0] $end
$var reg 32 " expected [31:0] $end
$var reg 3 # imm_sel [2:0] $end
$var reg 32 $ instr [31:0] $end
$var integer 32 % failed [31:0] $end
$var integer 32 & passed [31:0] $end
$scope module uut $end
$var wire 3 ' imm_sel [2:0] $end
$var wire 32 ( instr [31:0] $end
$var wire 32 ) u_imm [31:0] $end
$var wire 32 * s_imm [31:0] $end
$var wire 32 + j_imm [31:0] $end
$var wire 32 , i_imm [31:0] $end
$var wire 32 - b_imm [31:0] $end
$var reg 32 . imm_out [31:0] $end
$upscope $end
$scope task check $end
$var reg 32 / exp [31:0] $end
$var reg 3 0 sel [2:0] $end
$var reg 32 1 test_instr [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1111111111100000000000000000000 1
b0 0
b11111111111 /
b11111111111 .
b11111100000 -
b11111111111 ,
b111111111110 +
b11111100000 *
b1111111111100000000000000000000 )
b1111111111100000000000000000000 (
b0 '
b0 &
b0 %
b1111111111100000000000000000000 $
b0 #
bx "
b11111111111 !
$end
#2000
b11111111111111111111100000000000 !
b11111111111111111111100000000000 .
b11111111111111111111100000000000 ,
b11111111111111111111100000000000 *
b11111111111111111111000000000000 -
b10000000000000000000000000000000 )
b11111111111100000000000000000000 +
b10000000000000000000000000000000 $
b10000000000000000000000000000000 (
b11111111111111111111100000000000 /
b10000000000000000000000000000000 1
b1 &
b11111111111 "
#4000
b100100011 !
b100100011 .
b100100011 ,
b100100000 *
b100100000 -
b10010001100000000000000000000 )
b100100100010 +
b10010001100000000000000000000 $
b10010001100000000000000000000 (
b100100011 /
b10010001100000000000000000000 1
b10 &
b11111111111111111111100000000000 "
#6000
b100 !
b100 .
b0 ,
b100 *
b100 -
b1010000000000000 )
b1010000000000000 +
b1 #
b1 '
b1010001000100011 $
b1010001000100011 (
b100 /
b1 0
b1010001000100011 1
b11 &
b100100011 "
#8000
b11111111111111111111111111101000 !
b11111111111111111111111111101000 .
b11111111111111111111111111100000 ,
b11111111111111111111111111101000 *
b11111111111111111111011111101000 -
b11111110000000000010000000000000 )
b11111111111100000010011111100000 +
b11111110000000000010010000100011 $
b11111110000000000010010000100011 (
b11111111111111111111111111101000 /
b11111110000000000010010000100011 1
b100 &
b100 "
#10000
b1000000 !
b1000000 .
b1000000 ,
b1000000 *
b1000000 -
b100000000000000000000000000 )
b1000000 +
b10 #
b10 '
b100000000000000000001100011 $
b100000000000000000001100011 (
b1000000 /
b10 0
b100000000000000000001100011 1
b101 &
b11111111111111111111111111101000 "
#12000
b11111111111111111111111111100000 !
b11111111111111111111111111100000 .
b11111111111111111111111111100000 ,
b11111111111111111111111111100001 *
b11111111111111111111111111100000 -
b11111110000000000000000000000000 )
b11111111111100000000011111100000 +
b11111110000000000000000011100011 $
b11111110000000000000000011100011 (
b11111111111111111111111111100000 /
b11111110000000000000000011100011 1
b110 &
b1000000 "
#14000
b10010001101000101000000000000 !
b10010001101000101000000000000 .
b100100011 ,
b100100000 *
b100100000 -
b10010001101000101000000000000 )
b1000101100100100010 +
b11 #
b11 '
b10010001101000101000000000000 $
b10010001101000101000000000000 (
b10010001101000101000000000000 /
b11 0
b10010001101000101000000000000 1
b111 &
b11111111111111111111111111100000 "
#16000
b11111111111111111111000000000000 !
b11111111111111111111000000000000 .
b11111111111111111111111111111111 ,
b11111111111111111111111111100000 *
b11111111111111111111011111100000 -
b11111111111111111111000000000000 )
b11111111111111111111111111111110 +
b11111111111111111111000000000000 $
b11111111111111111111000000000000 (
b11111111111111111111000000000000 /
b11111111111111111111000000000000 1
b1000 &
b10010001101000101000000000000 "
#18000
b100 !
b100 .
b100 ,
b1 *
b100000000000 -
b10000000000000000000000 )
b100 +
b100 #
b100 '
b10000000000000011101111 $
b10000000000000011101111 (
b100 /
b100 0
b10000000000000011101111 1
b1001 &
b11111111111111111111000000000000 "
#20000
b11111111111111111111100000000000 !
b11111111111111111111100000000000 .
b11111111111111111111100000000001 ,
b11111111111111111111100000000000 *
b11111111111111111111000000000000 -
b10000000000111111111000000000000 )
b11111111111111111111100000000000 +
b10000000000111111111000001101111 $
b10000000000111111111000001101111 (
b11111111111111111111100000000000 /
b10000000000111111111000001101111 1
b1010 &
b100 "
#22000
b1011 &
b11111111111111111111100000000000 "
