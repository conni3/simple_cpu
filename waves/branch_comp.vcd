$date
	Tue Aug 26 21:19:24 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module branch_comp_tb $end
$var wire 1 ! branch $end
$var reg 3 " funct3 [2:0] $end
$var reg 32 # op1 [31:0] $end
$var reg 32 $ op2 [31:0] $end
$var integer 32 % failed [31:0] $end
$var integer 32 & passed [31:0] $end
$scope module uut $end
$var wire 3 ' funct3 [2:0] $end
$var wire 32 ( op1 [31:0] $end
$var wire 32 ) op2 [31:0] $end
$var parameter 3 * BEQ $end
$var parameter 3 + BGE $end
$var parameter 3 , BGEU $end
$var parameter 3 - BLT $end
$var parameter 3 . BLTU $end
$var parameter 3 / BNE $end
$var reg 1 ! branch_taken $end
$upscope $end
$scope task check_output $end
$var reg 1 0 actual $end
$var reg 1 1 expected $end
$var reg 512 2 test_name [511:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 /
b110 .
b100 -
b111 ,
b101 +
b0 *
$end
#0
$dumpvars
bx 2
x1
x0
b10100101101001011010010110100101 )
b10100101101001011010010110100101 (
b0 '
b0 &
b0 %
b10100101101001011010010110100101 $
b10100101101001011010010110100101 #
b0 "
1!
$end
#1
0!
b10110101101101011011010110110101 $
b10110101101101011011010110110101 )
b1 &
b10000100100010101010001 2
10
11
#2
1!
b1 "
b1 '
b10110110101101101011011010110110 $
b10110110101101101011011010110110 )
b10 &
b100001001000101010100010010000000101000010011100110010101100111011000010111010001101001011101100110010100101001 2
00
01
#3
0!
b10110110101101101011011010110110 #
b10110110101101101011011010110110 (
b11 &
b10000100100111001000101 2
10
11
#4
1!
b100 "
b100 '
b11111111111111111111111111111011 $
b11111111111111111111111111111011 )
b11111111111111111111111111110110 #
b11111111111111111111111111110110 (
b100 &
b100001001001110010001010010000000101000010011100110010101100111011000010111010001101001011101100110010100101001 2
00
01
#5
0!
b10 #
b10 (
b101 &
b10000100100110001010100 2
10
11
#6
1!
b101 "
b101 '
b11111111111111111111111111110110 $
b11111111111111111111111111110110 )
b11111111111111111111111111111011 #
b11111111111111111111111111111011 (
b110 &
b100001001001100010101000010000000101000010011100110010101100111011000010111010001101001011101100110010100101001 2
00
01
#7
0!
b11111111111111111111111111101100 #
b11111111111111111111111111101100 (
b111 &
b10000100100011101000101 2
10
11
#8
1!
b110 "
b110 '
b11111111111111111111111111111111 $
b11111111111111111111111111111111 )
b1 #
b1 (
b1000 &
b100001001000111010001010010000000101000010011100110010101100111011000010111010001101001011101100110010100101001 2
00
01
#9
0!
b1 $
b1 )
b11111111111111111111111111111111 #
b11111111111111111111111111111111 (
b1001 &
b1000010010011000101010001010101 2
10
11
#10
1!
b111 "
b111 '
b11111111111111111111111111111111 $
b11111111111111111111111111111111 )
b1010 &
b10000100100110001010100010101010010000000101000010011100110010101100111011000010111010001101001011101100110010100101001 2
00
01
#11
0!
b1 #
b1 (
b1011 &
b1000010010001110100010101010101 2
10
11
#12
b10 "
b10 '
b1100 &
b10000100100011101000101010101010010000000101000010011100110010101100111011000010111010001101001011101100110010100101001 2
00
01
#13
b1101 &
b1001110011011110010000001000010011100100110000101101110011000110110100000100000001010000100010001100101011001100110000101110101011011000111010000101001 2
