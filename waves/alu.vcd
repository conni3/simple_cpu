$date
	Fri Jul  4 17:37:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 1 ! zero $end
$var wire 32 " alu_result [31:0] $end
$var reg 4 # alu_control [3:0] $end
$var reg 32 $ operand_a [31:0] $end
$var reg 32 % operand_b [31:0] $end
$var integer 32 & fail_count [31:0] $end
$var integer 32 ' pass_count [31:0] $end
$scope module uut $end
$var wire 4 ( alu_control [3:0] $end
$var wire 32 ) operand_a [31:0] $end
$var wire 32 * operand_b [31:0] $end
$var wire 1 ! zero $end
$var parameter 4 + ALU_ADD $end
$var parameter 4 , ALU_AND $end
$var parameter 4 - ALU_OR $end
$var parameter 4 . ALU_SLL $end
$var parameter 4 / ALU_SLT $end
$var parameter 4 0 ALU_SLTU $end
$var parameter 4 1 ALU_SRA $end
$var parameter 4 2 ALU_SRL $end
$var parameter 4 3 ALU_SUB $end
$var parameter 4 4 ALU_XOR $end
$var reg 32 5 alu_result [31:0] $end
$upscope $end
$scope task do_test $end
$var reg 32 6 a [31:0] $end
$var reg 32 7 b [31:0] $end
$var reg 4 8 ctrl [3:0] $end
$var reg 32 9 expected [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 4
b1 3
b110 2
b111 1
b100 0
b11 /
b10 .
b1000 -
b1001 ,
b0 +
$end
#0
$dumpvars
b11001 9
b0 8
b1010 7
b1111 6
b11001 5
b1010 *
b1111 )
b0 (
b0 '
b0 &
b1010 %
b1111 $
b0 #
b11001 "
0!
$end
#10000
b101 "
b101 5
b1 #
b1 (
b101 9
b1 8
b1 '
#20000
b10000 "
b10000 5
b10 #
b10 (
b100 %
b100 *
b1 $
b1 )
b10000 9
b10 8
b100 7
b1 6
b10 '
#30000
b1 "
b1 5
b11 #
b11 (
b1 %
b1 *
b11111111111111111111111111111111 $
b11111111111111111111111111111111 )
b1 9
b11 8
b1 7
b11111111111111111111111111111111 6
b11 '
#40000
b100 #
b100 (
b10 %
b10 *
b1 $
b1 )
b100 8
b10 7
b1 6
b100 '
#50000
b11111111111111111111111111111111 "
b11111111111111111111111111111111 5
b101 #
b101 (
b1111000011110000111100001111 %
b1111000011110000111100001111 *
b11110000111100001111000011110000 $
b11110000111100001111000011110000 )
b11111111111111111111111111111111 9
b101 8
b1111000011110000111100001111 7
b11110000111100001111000011110000 6
b101 '
#60000
b1 "
b1 5
b110 #
b110 (
b11111 %
b11111 *
b10000000000000000000000000000000 $
b10000000000000000000000000000000 )
b1 9
b110 8
b11111 7
b10000000000000000000000000000000 6
b110 '
#70000
b11111111111111111111111111111111 "
b11111111111111111111111111111111 5
b111 #
b111 (
b11111111111111111111111111111111 9
b111 8
b111 '
#80000
b10010111011101010101011101111001 "
b10010111011101010101011101111001 5
b1000 #
b1000 (
b10000111011001010100001100100001 %
b10000111011001010100001100100001 *
b10010001101000101011001111000 $
b10010001101000101011001111000 )
b10010111011101010101011101111001 9
b1000 8
b10000111011001010100001100100001 7
b10010001101000101011001111000 6
b1000 '
#90000
b111111110000000000000000 "
b111111110000000000000000 5
b1001 #
b1001 (
b111111111111111100000000 %
b111111111111111100000000 *
b11111111111111110000000000000000 $
b11111111111111110000000000000000 )
b111111110000000000000000 9
b1001 8
b111111111111111100000000 7
b11111111111111110000000000000000 6
b1001 '
#100000
1!
b0 "
b0 5
b1 #
b1 (
b101 %
b101 *
b101 $
b101 )
b1010 '
#110000
b1011 '
