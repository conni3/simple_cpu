$date
	Tue Aug 26 21:19:24 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module next_pc_tb $end
$var wire 32 ! next_pc [31:0] $end
$var reg 1 " branch_taken $end
$var reg 32 # current_pc [31:0] $end
$var reg 32 $ imm_data [31:0] $end
$var reg 1 % is_branch $end
$var reg 1 & is_jal $end
$var reg 1 ' is_jalr $end
$var reg 32 ( rs1_data [31:0] $end
$scope module dut $end
$var wire 1 " branch_taken $end
$var wire 32 ) imm_out [31:0] $end
$var wire 1 % is_branch $end
$var wire 1 & is_jal $end
$var wire 1 ' is_jalr $end
$var wire 1 * misalign_bits $end
$var wire 32 + pc_current [31:0] $end
$var wire 32 , rs1_data [31:0] $end
$var wire 32 - pc_plus4 [31:0] $end
$var wire 32 . pc_next [31:0] $end
$var wire 32 / jalr_raw [31:0] $end
$var wire 32 0 jalr_aligned [31:0] $end
$var wire 32 1 branch_jal_pc [31:0] $end
$upscope $end
$scope task check $end
$var reg 32 2 expected_value [31:0] $end
$var reg 512 3 label [511:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1110000011000110010101100110100 3
b1000000000100 2
b1000000000000 1
b10000000000000 0
b10000000000000 /
b1000000000100 .
b1000000000100 -
b10000000000000 ,
b1000000000000 +
1*
b0 )
b10000000000000 (
0'
0&
0%
b0 $
b1000000000000 #
0"
b1000000000100 !
$end
#1000
b1000000100000 !
b1000000100000 .
b10000000100000 0
b11000100111001001100001011011100110001101101000001000000111010001100001011010110110010101101110 3
b1000000100000 2
1"
1%
b1000000100000 1
b10000000100000 /
b100000 $
b100000 )
#2000
b1000001000000 !
b1000001000000 .
b10000001000000 0
b10010100100000101001100 3
b1000001000000 2
1&
b1000001000000 1
b10000001000000 /
b1000000 $
b1000000 )
0"
0%
#3000
b10000000001000 !
b10000000001000 .
b10000000001000 0
b10010100100000101001100010100100010000001100001011011000110100101100111011011100110010101100100 3
b10000000001000 2
1'
b10000000000100 (
b10000000000100 ,
b1000000000101 1
b10000000001001 /
b101 $
b101 )
0&
#4000
b10000100000100 0
b1000000000100 !
b1000000000100 .
b1100010011100100110000101101110011000110110100000100000011011100110111101110100001000000111010001100001011010110110010101101110 3
b1000000000100 2
1%
b1000100000000 1
b10000100000100 /
b100000000 $
b100000000 )
0'
#5000
b1000000001000 !
b1000000001000 .
b10000000001100 0
b11100000111001001101001011011110111001001101001011101000111100100100000010010100100000101001100001000000110111101110110011001010111001000100000011000100111001001100001011011100110001101101000 3
b1000000001000 2
1&
1"
b1000000001000 1
b10000000001100 /
b1000 $
b1000 )
1%
#6000
b11000000000100 !
b11000000000100 .
b11000000000100 0
b1110000011100100110100101101111011100100110100101110100011110010010000001001010010000010100110001010010 3
b11000000000100 2
b11000000000100 (
b11000000000100 ,
1'
b1000000000001 1
b11000000000101 /
b1 $
b1 )
1&
1"
1%
#7000
b1000000000100 !
b1000000000100 .
0'
0&
0"
0%
