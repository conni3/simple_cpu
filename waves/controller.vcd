$date
	Tue Aug 26 15:19:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module controller_tb $end
$var wire 2 ! wb_sel [1:0] $end
$var wire 5 " rs2 [4:0] $end
$var wire 5 # rs1 [4:0] $end
$var wire 1 $ reg_write $end
$var wire 5 % rd [4:0] $end
$var wire 7 & opcode [6:0] $end
$var wire 2 ' op1_sel [1:0] $end
$var wire 1 ( mem_write $end
$var wire 1 ) mem_read $end
$var wire 1 * is_jalr $end
$var wire 1 + is_jal $end
$var wire 1 , is_branch $end
$var wire 32 - imm_out [31:0] $end
$var wire 7 . funct7 [6:0] $end
$var wire 3 / funct3 [2:0] $end
$var wire 20 0 csr [19:0] $end
$var wire 1 1 alu_src $end
$var wire 4 2 alu_ctrl [3:0] $end
$var reg 32 3 instr [31:0] $end
$var integer 32 4 fail_cnt [31:0] $end
$var integer 32 5 pass_cnt [31:0] $end
$var integer 32 6 percent [31:0] $end
$var integer 32 7 total_cnt [31:0] $end
$scope function branch $end
$var reg 13 8 b [12:0] $end
$var reg 3 9 f3 [2:0] $end
$var reg 5 : rs1_i [4:0] $end
$var reg 5 ; rs2_i [4:0] $end
$var integer 32 < imm13 [31:0] $end
$upscope $end
$scope function itype $end
$var reg 3 = f3 [2:0] $end
$var reg 7 > opc [6:0] $end
$var reg 5 ? rd_i [4:0] $end
$var reg 5 @ rs1_i [4:0] $end
$var reg 12 A u [11:0] $end
$var integer 32 B imm12 [31:0] $end
$upscope $end
$scope function jtype $end
$var reg 21 C j [20:0] $end
$var reg 5 D rd_i [4:0] $end
$var integer 32 E imm21 [31:0] $end
$upscope $end
$scope function rtype $end
$var reg 3 F f3 [2:0] $end
$var reg 7 G f7 [6:0] $end
$var reg 7 H opc [6:0] $end
$var reg 5 I rd_i [4:0] $end
$var reg 5 J rs1_i [4:0] $end
$var reg 5 K rs2_i [4:0] $end
$upscope $end
$scope function store $end
$var reg 3 L f3 [2:0] $end
$var reg 5 M rs1_i [4:0] $end
$var reg 5 N rs2_i [4:0] $end
$var reg 12 O u [11:0] $end
$var integer 32 P imm12 [31:0] $end
$upscope $end
$scope function utype $end
$var reg 20 Q imm20 [19:0] $end
$var reg 7 R opc [6:0] $end
$var reg 5 S rd_i [4:0] $end
$upscope $end
$scope module dut $end
$var wire 32 T instr [31:0] $end
$var wire 2 U wb_sel [1:0] $end
$var wire 5 V rs2 [4:0] $end
$var wire 5 W rs1 [4:0] $end
$var wire 1 $ reg_write $end
$var wire 5 X rd [4:0] $end
$var wire 7 Y opcode [6:0] $end
$var wire 2 Z op1_sel [1:0] $end
$var wire 1 ( mem_write $end
$var wire 1 ) mem_read $end
$var wire 1 * is_jalr $end
$var wire 1 + is_jal $end
$var wire 1 , is_branch $end
$var wire 3 [ imm_sel [2:0] $end
$var wire 32 \ imm_out [31:0] $end
$var wire 1 ] funct7_5 $end
$var wire 7 ^ funct7 [6:0] $end
$var wire 3 _ funct3 [2:0] $end
$var wire 20 ` csr [19:0] $end
$var wire 1 1 alu_src $end
$var wire 2 a alu_op [1:0] $end
$var wire 4 b alu_ctrl [3:0] $end
$scope module u_alu_control $end
$var wire 3 c funct3 [2:0] $end
$var wire 1 ] funct7_5 $end
$var wire 2 d alu_op [1:0] $end
$var reg 4 e alu_ctrl [3:0] $end
$upscope $end
$scope module u_decoder_glue $end
$var wire 32 f instr [31:0] $end
$var wire 2 g wb_sel [1:0] $end
$var wire 5 h rs2 [4:0] $end
$var wire 5 i rs1 [4:0] $end
$var wire 1 $ reg_write $end
$var wire 5 j rd [4:0] $end
$var wire 2 k op1_sel [1:0] $end
$var wire 1 ( mem_write $end
$var wire 1 ) mem_read $end
$var wire 1 l jump $end
$var wire 1 m is_system $end
$var wire 1 n is_store $end
$var wire 1 o is_lui $end
$var wire 1 p is_load $end
$var wire 1 * is_jalr $end
$var wire 1 + is_jal $end
$var wire 1 , is_branch $end
$var wire 1 q is_auipc $end
$var wire 1 r is_alu_reg $end
$var wire 1 s is_alu_imm $end
$var wire 3 t imm_sel [2:0] $end
$var wire 32 u imm_out [31:0] $end
$var wire 1 v branch_sig $end
$var wire 1 1 alu_src $end
$var wire 2 w alu_op [1:0] $end
$var parameter 32 x DATA_WIDTH $end
$scope module u_ctl $end
$var wire 32 y instr [31:0] $end
$var wire 1 m is_system $end
$var wire 1 n is_store $end
$var wire 1 o is_lui $end
$var wire 1 p is_load $end
$var wire 1 * is_jalr $end
$var wire 1 + is_jal $end
$var wire 1 , is_branch $end
$var wire 1 q is_auipc $end
$var wire 1 r is_alu_reg $end
$var wire 1 s is_alu_imm $end
$var wire 3 z funct3 [2:0] $end
$var parameter 32 { DATA_WIDTH $end
$var reg 2 | alu_op [1:0] $end
$var reg 1 1 alu_src $end
$var reg 1 v branch_sig $end
$var reg 3 } imm_sel [2:0] $end
$var reg 1 l jump $end
$var reg 1 ) mem_read $end
$var reg 1 ( mem_write $end
$var reg 2 ~ op1_sel [1:0] $end
$var reg 2 !" wb_sel [1:0] $end
$upscope $end
$scope module u_dec $end
$var wire 32 "" instr [31:0] $end
$var wire 1 * is_jalr $end
$var wire 1 $ reg_write $end
$var wire 7 #" opcode [6:0] $end
$var wire 1 m is_system $end
$var wire 1 n is_store $end
$var wire 1 o is_lui $end
$var wire 1 p is_load $end
$var wire 1 + is_jal $end
$var wire 1 , is_branch $end
$var wire 1 q is_auipc $end
$var wire 1 r is_alu_reg $end
$var wire 1 s is_alu_imm $end
$var parameter 32 $" DATA_WIDTH $end
$upscope $end
$scope module u_imm $end
$var wire 3 %" imm_sel [2:0] $end
$var wire 32 &" instr [31:0] $end
$var wire 32 '" u_imm [31:0] $end
$var wire 32 (" s_imm [31:0] $end
$var wire 32 )" j_imm [31:0] $end
$var wire 32 *" i_imm [31:0] $end
$var wire 32 +" b_imm [31:0] $end
$var reg 32 ," imm_out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope task expect_bits $end
$var reg 1 -" exp $end
$var reg 1 ." got $end
$var reg 1024 /" name [1023:0] $end
$upscope $end
$scope task expect_eq32 $end
$var reg 32 0" exp [31:0] $end
$var reg 32 1" got [31:0] $end
$var reg 1024 2" name [1023:0] $end
$upscope $end
$scope task expect_small $end
$var reg 8 3" exp [7:0] $end
$var reg 8 4" got [7:0] $end
$var reg 1024 5" name [1023:0] $end
$upscope $end
$scope task note_fail $end
$upscope $end
$scope task note_pass $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 $"
b100000 {
b100000 x
$end
#0
$dumpvars
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
x."
x-"
b0 ,"
b100000000010 +"
b10 *"
b1000000000000010 )"
b11 ("
b1000001000000000000000 '"
b1000001000000110110011 &"
b111 %"
b110011 #"
b1000001000000110110011 ""
b0 !"
b0 ~
b111 }
b10 |
b0 z
b1000001000000110110011 y
b10 w
0v
b0 u
b111 t
0s
1r
0q
0p
0o
0n
0m
0l
b0 k
b11 j
b1 i
b10 h
b0 g
b1000001000000110110011 f
b0 e
b10 d
b0 c
b0 b
b10 a
b10 `
b0 _
b0 ^
0]
b0 \
b111 [
b0 Z
b110011 Y
b11 X
b1 W
b10 V
b0 U
b1000001000000110110011 T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
b10 K
b1 J
b11 I
b110011 H
b0 G
b0 F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
b0 7
bx 6
b0 5
b0 4
b1000001000000110110011 3
b0 2
01
b10 0
b0 /
b0 .
b0 -
0,
0+
0*
0)
0(
b0 '
b110011 &
b11 %
1$
b1 #
b10 "
b0 !
$end
#1000
b1 2
b1 b
b1 e
1]
b100000 .
b100000 ^
b10000000010 0
b10000000010 `
b10000000010 *"
b10000000011 ("
b110000000010 +"
b1000000001000001000000000000000 '"
b1000010000000010 )"
b1000000001000001000000110110011 3
b1000000001000001000000110110011 T
b1000000001000001000000110110011 f
b1000000001000001000000110110011 y
b1000000001000001000000110110011 ""
b1000000001000001000000110110011 &"
b100000 G
b0 3"
b0 4"
b110111101110000001100010101111101110011011001010110110000100000010000010100010001000100 5"
b111 7
b111 5
0-"
0."
b1101101011001010110110101011111011101110111001001101001011101000110010100100000010000010100010001000100 /"
#2000
0]
b11111111111111111111111111111111 -
b11111111111111111111111111111111 \
b11111111111111111111111111111111 u
b11111111111111111111111111111111 ,"
b1001 2
b1001 b
b1001 e
b0 [
b0 t
b0 }
b0 %"
11
b10 a
b10 d
b10 w
b10 |
b10011 &
b10011 Y
b101 %
b101 X
b111 /
b111 _
b111 c
b11111 "
b11111 V
b1111111 .
b1111111 ^
b111111111111 0
b111111111111 `
b101 j
b11111 h
b111 z
0r
1s
b10011 #"
b11111111111111111111111111111111 *"
b11111111111111111111111111100101 ("
b11111111111111111111111111100100 +"
b11111111111100001111000000000000 '"
b11111111111100001111111111111110 )"
b11111111111100001111001010010011 3
b11111111111100001111001010010011 T
b11111111111100001111001010010011 f
b11111111111100001111001010010011 y
b11111111111100001111001010010011 ""
b11111111111100001111001010010011 &"
b111111111111 A
b11111111111111111111111111111111 B
b1 @
b111 =
b101 ?
b10011 >
b1001 7
b1001 5
b0 3"
b0 4"
b110111101110000001100010101111101110011011001010110110000100000010000010100010001000100 5"
#3000
b10 2
b10 b
b10 e
b0 [
b0 t
b0 }
b0 %"
b10 a
b10 d
b10 w
b10 |
11
b11 -
b11 \
b11 u
b11 ,"
b1 /
b1 _
b1 c
b11 "
b11 V
b0 .
b0 ^
b11 0
b11 `
b11 h
b1 z
b11 *"
b101 ("
b100000000100 +"
b1100001001000000000000 '"
b1001100000000010 )"
b1100001001001010010011 3
b1100001001001010010011 T
b1100001001001010010011 f
b1100001001001010010011 y
b1100001001001010010011 ""
b1100001001001010010011 &"
b11 A
b11 B
b1 =
b11111111111111111111111111111111 0"
b11111111111111111111111111111111 1"
b11010010110110101101101010111110110111101110101011101000010000001000001010011100100010001001001 2"
b0 3"
b0 4"
b11011110111000000110001010111110111001101100101011011000010000001000001010011100100010001001001 5"
b1111 7
b1111 5
1-"
1."
b111001001100101011001110101111101110111011100100110100101110100011001010010000001000001010011100100010001001001 /"
#4000
b110 2
b110 b
b110 e
b0 [
b0 t
b0 }
b0 %"
b10 a
b10 d
b10 w
b10 |
11
b1 -
b1 \
b1 u
b1 ,"
b101 /
b101 _
b101 c
b1 "
b1 V
b1 0
b1 `
b1 h
b101 z
b1 *"
b100001101000000000000 '"
b1101100000000000 )"
b100001101001010010011 3
b100001101001010010011 T
b100001101001010010011 f
b100001101001010010011 y
b100001101001010010011 ""
b100001101001010010011 &"
b1 A
b1 B
b101 =
b11 0"
b11 1"
b11010010110110101101101010111110110111101110101011101000010000001010011010011000100110001001001 2"
b10011 7
b10011 5
b0 3"
b0 4"
b11011110111000000110001010111110111001101100101011011000010000001010011010011000100110001001001 5"
#5000
b111 2
b111 b
b111 e
1]
b10000000001 -
b10000000001 \
b10000000001 u
b10000000001 ,"
b100000 .
b100000 ^
b10000000001 0
b10000000001 `
b10000000001 *"
b10000000101 ("
b110000000100 +"
b1000000000100001101000000000000 '"
b1101110000000000 )"
b1000000000100001101001010010011 3
b1000000000100001101001010010011 T
b1000000000100001101001010010011 f
b1000000000100001101001010010011 y
b1000000000100001101001010010011 ""
b1000000000100001101001010010011 &"
b10000000001 A
b10000000001 B
b10101 7
b10101 5
b0 3"
b0 4"
b11011110111000000110001010111110111001101100101011011000010000001010011010100100100110001001001 5"
#6000
0]
b1000 2
b1000 b
b1000 e
b111 [
b111 t
b111 }
b111 %"
b10 a
b10 d
b10 w
b10 |
01
b0 -
b0 \
b0 u
b0 ,"
b110011 &
b110011 Y
b11 %
b11 X
b110 /
b110 _
b110 c
b10 "
b10 V
b0 .
b0 ^
b10 0
b10 `
b11 j
b10 h
b110 z
1r
0s
b110011 #"
b10 *"
b11 ("
b100000000010 +"
b1000001110000000000000 '"
b1110000000000010 )"
b1000001110000110110011 3
b1000001110000110110011 T
b1000001110000110110011 f
b1000001110000110110011 y
b1000001110000110110011 ""
b1000001110000110110011 &"
b0 G
b110 F
b10111 7
b10111 5
b0 3"
b0 4"
b11011110111000000110001010111110111001101100101011011000010000001010011010100100100000101001001 5"
#7000
b1111111 -
b1111111 \
b1111111 u
b1111111 ,"
b101 2
b101 b
b101 e
b0 [
b0 t
b0 }
b0 %"
11
b10 a
b10 d
b10 w
b10 |
b10011 &
b10011 Y
b100 /
b100 _
b100 c
b11111 "
b11111 V
b11 .
b11 ^
b1111111 0
b1111111 `
b11111 h
b100 z
0r
1s
b10011 #"
b1111111 *"
b1100011 ("
b100001100010 +"
b111111100001100000000000000 '"
b1100100001111110 )"
b111111100001100000110010011 3
b111111100001100000110010011 T
b111111100001100000110010011 f
b111111100001100000110010011 y
b111111100001100000110010011 ""
b111111100001100000110010011 &"
b1111111 A
b1111111 B
b100 =
b11 ?
b11001 7
b11001 5
b0 3"
b0 4"
b1101111011100000011000101011111011100110110010101101100001000000100111101010010 5"
#8000
b0 2
b0 b
b0 e
b0 [
b0 t
b0 }
b0 %"
b0 a
b0 d
b0 w
b0 |
11
b11111111111111111111111111111000 -
b11111111111111111111111111111000 \
b11111111111111111111111111111000 u
b11111111111111111111111111111000 ,"
b101 %
b101 X
b0 /
b0 _
b0 c
b11000 "
b11000 V
b1111111 .
b1111111 ^
b111111111000 0
b111111111000 `
b101 j
b11000 h
b0 z
b11111111111111111111111111111000 *"
b11111111111111111111111111100101 ("
b11111111111111111111111111100100 +"
b11111111100000001000000000000000 '"
b11111111111100001000011111111000 )"
b11111111100000001000001010010011 3
b11111111100000001000001010010011 T
b11111111100000001000001010010011 f
b11111111100000001000001010010011 y
b11111111100000001000001010010011 ""
b11111111100000001000001010010011 &"
b111111111000 A
b11111111111111111111111111111000 B
b0 =
b101 ?
b11011 7
b11011 5
b0 3"
b0 4"
b11011110111000000110001010111110111001101100101011011000010000001011000010011110101001001001001 5"
#9000
b1 !
b1 U
b1 g
b1 !"
1)
b0 [
b0 t
b0 }
b0 %"
11
b10000 -
b10000 \
b10000 u
b10000 ,"
b11 &
b11 Y
b111 %
b111 X
b10 /
b10 _
b10 c
b10000 "
b10000 V
b0 .
b0 ^
b10000 0
b10000 `
b111 j
b10000 h
b10 z
0s
1p
b11 #"
b10000 *"
b111 ("
b100000000110 +"
b1000000001010000000000000 '"
b1010000000010000 )"
b1000000001010001110000011 3
b1000000001010001110000011 T
b1000000001010001110000011 f
b1000000001010001110000011 y
b1000000001010001110000011 ""
b1000000001010001110000011 &"
b10000 A
b10000 B
b10 =
b111 ?
b11 >
b11111111111111111111111111111000 0"
b11111111111111111111111111111000 1"
b11010010110110101101101010111110110111101110101011101000010000001000001010001000100010001001001 2"
b11110 7
b11110 5
b11011110111000000110001010111110111001101100101011011000010000001000001010001000100010001001001 5"
#10000
0$
1(
b0 !
b0 U
b0 g
b0 !"
b1 [
b1 t
b1 }
b1 %"
11
0)
b11111111111111111111111111110000 -
b11111111111111111111111111110000 \
b11111111111111111111111111110000 u
b11111111111111111111111111110000 ,"
b100011 &
b100011 Y
b10000 %
b10000 X
b111 "
b111 V
b1111111 .
b1111111 ^
b111111100111 0
b111111100111 `
b10000 j
b111 h
0p
1n
b100011 #"
b11111111111111111111111111100111 *"
b11111111111111111111111111110000 ("
b11111111111111111111011111110000 +"
b11111110011100001010000000000000 '"
b11111111111100001010111111100110 )"
b11111110011100001010100000100011 3
b11111110011100001010100000100011 T
b11111110011100001010100000100011 f
b11111110011100001010100000100011 y
b11111110011100001010100000100011 ""
b11111110011100001010100000100011 &"
b111111110000 O
b11111111111111111111111111110000 P
b111 N
b1 M
b10 L
b0 3"
b0 4"
b1101111011100000011000101011111011100110110010101101100001000000100110001010111 5"
1-"
1."
b100101 7
b100101 5
b11100100110010101100111010111110111011101110010011010010111010001100101001000000100110001010111 /"
#11000
b1 2
b1 b
b1 e
b1 a
b1 d
b1 w
b1 |
1v
b10 [
b10 t
b10 }
b10 %"
01
0(
b1000 -
b1000 \
b1000 u
b1000 ,"
b1100011 &
b1100011 Y
b1000 %
b1000 X
b0 /
b0 _
b0 c
b10 "
b10 V
b0 .
b0 ^
b10 0
b10 `
b1000 j
b10 h
b0 z
1,
0n
b1100011 #"
b10 *"
b1000 ("
b1000 +"
b1000001000000000000000 '"
b1000000000000010 )"
b1000001000010001100011 3
b1000001000010001100011 T
b1000001000010001100011 f
b1000001000010001100011 y
b1000001000010001100011 ""
b1000001000010001100011 &"
b1000 8
b1000 <
b10 ;
b1 :
b0 9
b0 3"
b0 4"
b1101111011100000011000101011111011100110110010101101100001000000101001101010111 5"
b101011 7
b101011 5
0-"
0."
b11100100110010101100111010111110111011101110010011010010111010001100101001000000101001101010111 /"
#12000
1$
b0 2
b0 b
b0 e
b1 '
b1 Z
b1 k
b1 ~
11
1l
b10 !
b10 U
b10 g
b10 !"
b100 [
b100 t
b100 }
b100 %"
b0 a
b0 d
b0 w
b0 |
0v
b10100 -
b10100 \
b10100 u
b10100 ,"
b1101111 &
b1101111 Y
b1 %
b1 X
b0 #
b0 W
b10100 "
b10100 V
b10100 0
b10100 `
b1 j
b0 i
b10100 h
0,
1+
b1101111 #"
b10100 *"
b1 ("
b100000000000 +"
b1010000000000000000000000 '"
b10100 )"
b1010000000000000011101111 3
b1010000000000000011101111 T
b1010000000000000011101111 f
b1010000000000000011101111 y
b1010000000000000011101111 ""
b1010000000000000011101111 &"
b10100 C
b10100 E
b1 D
b110111101110000001100010101111101110011011001010110110000100000010000100100010101010001 5"
b101110 7
b101110 5
0-"
0."
b1110010011001010110011101011111011101110111001001101001011101000110010100100000010000100100010101010001 /"
#13000
1*
b0 '
b0 Z
b0 k
b0 ~
b10 !
b10 U
b10 g
b10 !"
b0 [
b0 t
b0 }
b0 %"
1l
11
b0 -
b0 \
b0 u
b0 ,"
b1100111 &
b1100111 Y
b10 #
b10 W
b0 "
b0 V
b0 0
b0 `
b10 i
b0 h
0+
b1100111 #"
b0 *"
b10000000000000000 '"
b10000000000000000 )"
b10000000011100111 3
b10000000011100111 T
b10000000011100111 f
b10000000011100111 y
b10000000011100111 ""
b10000000011100111 &"
b0 A
b0 B
b10 @
b0 =
b1 ?
b1100111 >
b1 3"
b1 4"
b110111101110000001100010101111101110011011001010110110000100000010010100100000101001100 5"
b110011 7
b110011 5
1-"
1."
b1110010011001010110011101011111011101110111001001101001011101000110010100100000010010100100000101001100 /"
#14000
1$
b10 '
b10 Z
b10 k
b10 ~
b0 !
b0 U
b0 g
b0 !"
b11 [
b11 t
b11 }
b11 %"
0l
11
0*
b10010001101000101000000000000 -
b10010001101000101000000000000 \
b10010001101000101000000000000 u
b10010001101000101000000000000 ,"
b110111 &
b110111 Y
b1010 %
b1010 X
b101 /
b101 _
b101 c
b1000 #
b1000 W
b11 "
b11 V
b1001 .
b1001 ^
b100100011 0
b100100011 `
b1010 j
b1000 i
b11 h
b101 z
1o
b110111 #"
b100100011 *"
b100101010 ("
b100101010 +"
b10010001101000101000000000000 '"
b1000101100100100010 )"
b10010001101000101010100110111 3
b10010001101000101010100110111 T
b10010001101000101010100110111 f
b10010001101000101010100110111 y
b10010001101000101010100110111 ""
b10010001101000101010100110111 &"
b10010001101000101 Q
b1010 S
b110111 R
b0 3"
b0 4"
b11011110111000000110001010111110111001101100101011011000010000001001010010000010100110001010010 5"
b111000 7
b111000 5
1-"
1."
b111001001100101011001110101111101110111011100100110100101110100011001010010000001001010010000010100110001010010 /"
#15000
b1 '
b1 Z
b1 k
b1 ~
b11 [
b11 t
b11 }
b11 %"
11
b10000000000000000 -
b10000000000000000 \
b10000000000000000 u
b10000000000000000 ,"
b10111 &
b10111 Y
b1011 %
b1011 X
b0 /
b0 _
b0 c
b10 #
b10 W
b0 "
b0 V
b0 .
b0 ^
b0 0
b0 `
b1011 j
b10 i
b0 h
b0 z
1q
0o
b10111 #"
b0 *"
b1011 ("
b100000001010 +"
b10000000000000000 '"
b10000000000000000 )"
b10000010110010111 3
b10000010110010111 T
b10000010110010111 f
b10000010110010111 y
b10000010110010111 ""
b10000010110010111 &"
b10000 Q
b1011 S
b10111 R
b10 3"
b10 4"
b10010001101000101000000000000 0"
b10010001101000101000000000000 1"
b110100101101101011011010101111101101111011101010111010000100000010011000101010101001001 2"
b110111101110000001100010101111101110011011001010110110000100000010011000101010101001001 5"
b111101 7
b111101 5
b1110010011001010110011101011111011101110111001001101001011101000110010100100000010011000101010101001001 /"
#16000
b1100100 6
b10000000000000000 0"
b10000000000000000 1"
b1101001011011010110110101011111011011110111010101110100001000000100000101010101010010010101000001000011 2"
b1 3"
b1 4"
b1101111011100000011000101011111011100110110010101101100001000000100000101010101010010010101000001000011 5"
b1000001 7
b1000001 5
b11100100110010101100111010111110111011101110010011010010111010001100101001000000100000101010101010010010101000001000011 /"
