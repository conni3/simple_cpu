$date
	Sun Jul  6 11:27:25 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module control_tb $end
$var wire 1 ! RegWrite $end
$var wire 1 " MemtoReg $end
$var wire 1 # MemWrite $end
$var wire 1 $ MemRead $end
$var wire 1 % Jump $end
$var wire 3 & ImmSrc [2:0] $end
$var wire 1 ' Branch $end
$var wire 1 ( ALUSrc $end
$var wire 2 ) ALUOp [1:0] $end
$var reg 3 * funct3 [2:0] $end
$var reg 7 + opcode [6:0] $end
$var integer 32 , failed [31:0] $end
$var integer 32 - passed [31:0] $end
$scope module uut $end
$var wire 3 . funct3 [2:0] $end
$var wire 7 / opcode [6:0] $end
$var reg 2 0 ALUOp [1:0] $end
$var reg 1 ( ALUSrc $end
$var reg 1 ' Branch $end
$var reg 3 1 ImmSrc [2:0] $end
$var reg 1 % Jump $end
$var reg 1 $ MemRead $end
$var reg 1 # MemWrite $end
$var reg 1 " MemtoReg $end
$var reg 1 ! RegWrite $end
$upscope $end
$scope task check_output $end
$var reg 2 2 exp_ALUOp [1:0] $end
$var reg 1 3 exp_ALUSrc $end
$var reg 1 4 exp_Branch $end
$var reg 3 5 exp_ImmSrc [2:0] $end
$var reg 1 6 exp_Jump $end
$var reg 1 7 exp_MemRead $end
$var reg 1 8 exp_MemWrite $end
$var reg 1 9 exp_MemtoReg $end
$var reg 1 : exp_RegWrite $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
x:
x9
x8
x7
x6
bx 5
x4
x3
bx 2
b0 1
b10 0
b110011 /
bx .
b0 -
b0 ,
b110011 +
bx *
b10 )
0(
0'
b0 &
0%
0$
0#
0"
1!
$end
#10
1(
b10 )
b10 0
1!
b10011 +
b10011 /
b1 -
b0 5
b10 2
06
04
03
09
08
07
1:
#20
1"
1$
b0 )
b0 0
1(
1!
b11 +
b11 /
b10 -
13
#30
b1 &
b1 1
1#
1(
0"
0$
0!
b100011 +
b100011 /
b11 -
b0 2
19
17
#40
b1 )
b1 0
1'
b10 &
b10 1
0(
0#
b1100011 +
b1100011 /
b100 -
b1 5
09
18
07
0:
#50
1%
1!
1(
b100 &
b100 1
b0 )
b0 0
0'
b1101111 +
b1101111 /
b101 -
b10 5
b1 2
14
03
08
#60
b0 &
b0 1
1%
1(
1!
b0 *
b0 .
b1100111 +
b1100111 /
b110 -
b100 5
b0 2
16
04
13
1:
#70
b11 &
b11 1
b11 )
b11 0
0%
1(
1!
b110111 +
b110111 /
b111 -
b0 5
#80
b11 &
b11 1
b0 )
b0 0
1(
1!
b10111 +
b10111 /
b1000 -
b11 5
b11 2
06
#90
b1001 -
b0 2
