$date
	Tue Aug 26 15:19:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module decoder_glue_tb $end
$var wire 5 ! rd [4:0] $end
$var wire 5 " rs1 [4:0] $end
$var wire 5 # rs2 [4:0] $end
$var wire 2 $ wb_sel [1:0] $end
$var wire 1 % regWrite $end
$var wire 32 & imm [31:0] $end
$var wire 1 ' Store $end
$var wire 1 ( SYSTEM $end
$var wire 1 ) MemWrite $end
$var wire 1 * MemRead $end
$var wire 1 + Load $end
$var wire 1 , LUI $end
$var wire 1 - Jump $end
$var wire 1 . JALR $end
$var wire 1 / JAL $end
$var wire 3 0 ImmSrc [2:0] $end
$var wire 1 1 BranchSig $end
$var wire 1 2 Branch $end
$var wire 1 3 AUIPC $end
$var wire 1 4 ALUreg $end
$var wire 1 5 ALUimm $end
$var wire 1 6 ALUSrc $end
$var wire 2 7 ALUOp [1:0] $end
$var parameter 7 8 OPC_AUIPC $end
$var parameter 7 9 OPC_BRANCH $end
$var parameter 7 : OPC_ITYPE $end
$var parameter 7 ; OPC_JAL $end
$var parameter 7 < OPC_JALR $end
$var parameter 7 = OPC_LOAD $end
$var parameter 7 > OPC_LUI $end
$var parameter 7 ? OPC_RTYPE $end
$var parameter 7 @ OPC_STORE $end
$var reg 32 A instr [31:0] $end
$scope function mk_b $end
$var reg 3 B funct3 [2:0] $end
$var reg 13 C imm13 [12:0] $end
$var reg 5 D rs1 [4:0] $end
$var reg 5 E rs2 [4:0] $end
$upscope $end
$scope function mk_i $end
$var reg 3 F funct3 [2:0] $end
$var reg 12 G imm12 [11:0] $end
$var reg 7 H opc [6:0] $end
$var reg 5 I rd [4:0] $end
$var reg 5 J rs1 [4:0] $end
$upscope $end
$scope function mk_j $end
$var reg 21 K imm21 [20:0] $end
$var reg 5 L rd [4:0] $end
$upscope $end
$scope function mk_r $end
$var reg 3 M funct3 [2:0] $end
$var reg 7 N funct7 [6:0] $end
$var reg 5 O rd [4:0] $end
$var reg 5 P rs1 [4:0] $end
$var reg 5 Q rs2 [4:0] $end
$upscope $end
$scope function mk_s $end
$var reg 3 R funct3 [2:0] $end
$var reg 12 S imm12 [11:0] $end
$var reg 5 T rs1 [4:0] $end
$var reg 5 U rs2 [4:0] $end
$upscope $end
$scope function mk_u $end
$var reg 20 V imm20 [19:0] $end
$var reg 7 W opc [6:0] $end
$var reg 5 X rd [4:0] $end
$upscope $end
$scope module dut $end
$var wire 32 Y instr [31:0] $end
$var wire 2 Z wb_sel [1:0] $end
$var wire 5 [ rs2 [4:0] $end
$var wire 5 \ rs1 [4:0] $end
$var wire 1 % reg_write $end
$var wire 5 ] rd [4:0] $end
$var wire 2 ^ op1_sel [1:0] $end
$var wire 1 ) mem_write $end
$var wire 1 * mem_read $end
$var wire 1 - jump $end
$var wire 1 ( is_system $end
$var wire 1 ' is_store $end
$var wire 1 , is_lui $end
$var wire 1 + is_load $end
$var wire 1 . is_jalr $end
$var wire 1 / is_jal $end
$var wire 1 2 is_branch $end
$var wire 1 3 is_auipc $end
$var wire 1 4 is_alu_reg $end
$var wire 1 5 is_alu_imm $end
$var wire 3 _ imm_sel [2:0] $end
$var wire 32 ` imm_out [31:0] $end
$var wire 1 1 branch_sig $end
$var wire 1 6 alu_src $end
$var wire 2 a alu_op [1:0] $end
$var parameter 32 b DATA_WIDTH $end
$scope module u_ctl $end
$var wire 32 c instr [31:0] $end
$var wire 1 ( is_system $end
$var wire 1 ' is_store $end
$var wire 1 , is_lui $end
$var wire 1 + is_load $end
$var wire 1 . is_jalr $end
$var wire 1 / is_jal $end
$var wire 1 2 is_branch $end
$var wire 1 3 is_auipc $end
$var wire 1 4 is_alu_reg $end
$var wire 1 5 is_alu_imm $end
$var wire 3 d funct3 [2:0] $end
$var parameter 32 e DATA_WIDTH $end
$var reg 2 f alu_op [1:0] $end
$var reg 1 6 alu_src $end
$var reg 1 1 branch_sig $end
$var reg 3 g imm_sel [2:0] $end
$var reg 1 - jump $end
$var reg 1 * mem_read $end
$var reg 1 ) mem_write $end
$var reg 2 h op1_sel [1:0] $end
$var reg 2 i wb_sel [1:0] $end
$upscope $end
$scope module u_dec $end
$var wire 32 j instr [31:0] $end
$var wire 1 . is_jalr $end
$var wire 1 % reg_write $end
$var wire 7 k opcode [6:0] $end
$var wire 1 ( is_system $end
$var wire 1 ' is_store $end
$var wire 1 , is_lui $end
$var wire 1 + is_load $end
$var wire 1 / is_jal $end
$var wire 1 2 is_branch $end
$var wire 1 3 is_auipc $end
$var wire 1 4 is_alu_reg $end
$var wire 1 5 is_alu_imm $end
$var parameter 32 l DATA_WIDTH $end
$upscope $end
$scope module u_imm $end
$var wire 3 m imm_sel [2:0] $end
$var wire 32 n instr [31:0] $end
$var wire 32 o u_imm [31:0] $end
$var wire 32 p s_imm [31:0] $end
$var wire 32 q j_imm [31:0] $end
$var wire 32 r i_imm [31:0] $end
$var wire 32 s b_imm [31:0] $end
$var reg 32 t imm_out [31:0] $end
$upscope $end
$upscope $end
$scope task chk $end
$var reg 1 u cond $end
$var reg 512 v msg [511:0] $end
$upscope $end
$scope task settle $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 l
b100000 e
b100000 b
b100011 @
b110011 ?
b110111 >
b11 =
b1100111 <
b1101111 ;
b10011 :
b1100011 9
b10111 8
$end
#0
$dumpvars
bx v
xu
b0 t
b100000000100 s
b10 r
b1000000000000010 q
b101 p
b1000001000000000000000 o
b1000001000001010110011 n
b111 m
b110011 k
b1000001000001010110011 j
b0 i
b0 h
b111 g
b10 f
b0 d
b1000001000001010110011 c
b10 a
b0 `
b111 _
b0 ^
b101 ]
b1 \
b10 [
b0 Z
b1000001000001010110011 Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
b10 Q
b1 P
b101 O
b0 N
b0 M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
b1000001000001010110011 A
b10 7
06
05
14
03
02
01
b111 0
0/
0.
0-
0,
0+
0*
0)
0(
0'
b0 &
1%
b0 $
bz #
bz "
bz !
$end
#1000
b1111111 &
b1111111 `
b1111111 t
b0 0
b0 _
b0 g
b0 m
16
b0 7
b0 a
b0 f
b110 ]
b11111 [
04
15
b10011 k
b1111111 r
b1100110 p
b1100110 s
b111111100001000000000000000 o
b1000100001111110 q
b111111100001000001100010011 A
b111111100001000001100010011 Y
b111111100001000001100010011 c
b111111100001000001100010011 j
b111111100001000001100010011 n
b1111111 G
b1 J
b0 F
b110 I
b10011 H
1u
b10100100010110101110100011110010111000001100101001000000110100101101101011011010010000000110000 v
#2000
b10 7
b10 a
b10 f
b0 0
b0 _
b0 g
b0 m
16
b11111111111111111111111111111111 &
b11111111111111111111111111111111 `
b11111111111111111111111111111111 t
b10 d
b11111111111111111111111111111111 r
b11111111111111111111111111100110 p
b11111111111111111111011111100110 s
b11111111111100001010000000000000 o
b11111111111100001010111111111110 q
b11111111111100001010001100010011 A
b11111111111100001010001100010011 Y
b11111111111100001010001100010011 c
b11111111111100001010001100010011 j
b11111111111100001010001100010011 n
b111111111111 G
b10 F
b100000101000100010001000100100100100000011010010110110101101101 v
1u
#3000
b0 0
b0 _
b0 g
b0 m
b10 7
b10 a
b10 f
16
b1 &
b1 `
b1 t
b111 ]
b1 [
b11 d
b1 r
b111 p
b100000000110 s
b100001011000000000000 o
b1011100000000000 q
b100001011001110010011 A
b100001011001110010011 Y
b100001011001110010011 c
b100001011001110010011 j
b100001011001110010011 n
b1 G
b11 F
b111 I
b10100110100110001010100010010010010000001101001011011010110110100100000001010000111001101101001011001110110111000101101011001010111100001110100011001010110111001100100011001010110010000100000001011010011000100101001 v
1u
#4000
b0 0
b0 _
b0 g
b0 m
b10 7
b10 a
b10 f
16
b1111 &
b1111 `
b1111 t
b1000 ]
b1111 [
b100 d
b1111 r
b1000 p
b1000 s
b111100001100000000000000 o
b1100100000001110 q
b111100001100010000010011 A
b111100001100010000010011 Y
b111100001100010000010011 c
b111100001100010000010011 j
b111100001100010000010011 n
b1111 G
b100 F
b1000 I
b10100110100110001010100010010010101010100100000011010010110110101101101 v
1u
#5000
b0 0
b0 _
b0 g
b0 m
b10 7
b10 a
b10 f
16
b11110000 &
b11110000 `
b11110000 t
b1001 ]
b10000 [
b110 d
b11110000 r
b11101001 p
b100011101000 s
b1111000000001110000000000000 o
b1110000011110000 q
b1111000000001110010010010011 A
b1111000000001110010010010011 Y
b1111000000001110010010010011 c
b1111000000001110010010010011 j
b1111000000001110010010010011 n
b11110000 G
b110 F
b1001 I
b101100001001111010100100100100100100000011010010110110101101101 v
1u
#6000
b0 0
b0 _
b0 g
b0 m
b10 7
b10 a
b10 f
16
b1111 &
b1111 `
b1111 t
b1010 ]
b1111 [
b111 d
b1111 r
b1010 p
b1010 s
b111100001111000000000000 o
b1111100000001110 q
b111100001111010100010011 A
b111100001111010100010011 Y
b111100001111010100010011 c
b111100001111010100010011 j
b111100001111010100010011 n
b1111 G
b111 F
b1010 I
b1001111010100100100100100100000011010010110110101101101 v
1u
#7000
b0 0
b0 _
b0 g
b0 m
b10 7
b10 a
b10 f
16
b100 &
b100 `
b100 t
b1011 ]
b100 [
b1 d
b100 r
b1011 p
b100000001010 s
b10000001001000000000000 o
b1001000000000100 q
b10000001001010110010011 A
b10000001001010110010011 Y
b10000001001010110010011 c
b10000001001010110010011 j
b10000001001010110010011 n
b100 G
b1 F
b1011 I
b100000101001110010001000100100100100000011010010110110101101101 v
1u
#8000
b0 0
b0 _
b0 g
b0 m
b10 7
b10 a
b10 f
16
b101 &
b101 `
b101 t
b1100 ]
b101 [
b101 d
b101 r
b1100 p
b1100 s
b10100001101000000000000 o
b1101100000000100 q
b10100001101011000010011 A
b10100001101011000010011 Y
b10100001101011000010011 c
b10100001101011000010011 j
b10100001101011000010011 n
b101 G
b101 F
b1100 I
b1010011010011000100110001001001001000000110100101101101011011010010000000101000011100110110100001100001011011010111010000101001 v
1u
#9000
b10000000101 &
b10000000101 `
b10000000101 t
b1101 ]
b10000000101 r
b10000001101 p
b110000001100 s
b1000000010100001101000000000000 o
b1101110000000100 q
b1000000010100001101011010010011 A
b1000000010100001101011010010011 Y
b1000000010100001101011010010011 c
b1000000010100001101011010010011 j
b1000000010100001101011010010011 n
b10000000101 G
b1101 I
b1010011010100100100110001001001001000000110100101101101011011010010000000101000011100110110100001100001011011010111010000101001 v
1u
#10000
b1 $
b1 Z
b1 i
1*
b0 0
b0 _
b0 g
b0 m
b0 7
b0 a
b0 f
16
b11000 &
b11000 `
b11000 t
b111 ]
b11 \
b11000 [
b10 d
05
1+
b11 k
b11000 r
b111 p
b100000000110 s
b1100000011010000000000000 o
b11010000000011000 q
b1100000011010001110000011 A
b1100000011010001110000011 Y
b1100000011010001110000011 c
b1100000011010001110000011 j
b1100000011010001110000011 n
b11000 G
b11 J
b10 F
b111 I
b11 H
b1010011010100100100000101001001001000000110100101101101011011010010000000101000001100000011000100110000001100000011000000110000001100000011110000111100001101010010000001111100001000000011010100101001 v
1u
#11000
0%
1)
b0 $
b0 Z
b0 i
b1 0
b1 _
b1 g
b1 m
16
0*
b11100 &
b11100 `
b11100 t
b11100 ]
b100 \
b1000 [
0+
1'
b100011 k
b1000 r
b11100 p
b11100 s
b100000100010000000000000 o
b100010000000001000 q
b100000100010111000100011 A
b100000100010111000100011 Y
b100000100010111000100011 c
b100000100010111000100011 j
b100000100010111000100011 n
b11100 S
b1000 U
b100 T
b10 R
b100110001001111010000010100010000100000011010010110110101101101 v
1u
#12000
b1 7
b1 a
b1 f
11
b10 0
b10 _
b10 g
b10 m
06
0)
b10000 &
b10000 `
b10000 t
b10000 ]
b1 \
b10 [
b0 d
12
0'
b1100011 k
b10 r
b10000 p
b10000 s
b1000001000000000000000 o
b1000000000000010 q
b1000001000100001100011 A
b1000001000100001100011 Y
b1000001000100001100011 c
b1000001000100001100011 j
b1000001000100001100011 n
b10000 C
b10 E
b1 D
b0 B
b10100110101010001001111010100100100010100100000011010010110110101101101 v
1u
#13000
1%
b1 ^
b1 h
16
1-
b10 $
b10 Z
b10 i
b100 0
b100 _
b100 g
b100 m
b0 7
b0 a
b0 f
01
b100000 &
b100000 `
b100000 t
b1 ]
b0 \
b0 [
02
1/
b1101111 k
b100000 r
b100001 p
b100000100000 s
b10000000000000000000000000 o
b100000 q
b10000000000000000011101111 A
b10000000000000000011101111 Y
b10000000000000000011101111 c
b10000000000000000011101111 j
b10000000000000000011101111 n
b100000 K
b1 L
b1000010010100100100000101001110010000110100100000100000011010010110110101101101 v
1u
#14000
1.
b0 ^
b0 h
b10 $
b10 Z
b10 i
b0 0
b0 _
b0 g
b0 m
1-
16
b10100 &
b10100 `
b10100 t
b101 ]
b1001 \
b10100 [
0/
b1100111 k
b10100 r
b101 p
b100000000100 s
b1010001001000000000000000 o
b1001000000000010100 q
b1010001001000001011100111 A
b1010001001000001011100111 Y
b1010001001000001011100111 c
b1010001001000001011100111 j
b1010001001000001011100111 n
b10100 G
b1001 J
b0 F
b101 I
b1100111 H
b1001010010000010100110000100000011010010110110101101101 v
1u
#15000
1%
b10 ^
b10 h
b0 $
b0 Z
b0 i
b11 0
b11 _
b11 g
b11 m
0-
16
0.
b10010001101000101000000000000 &
b10010001101000101000000000000 `
b10010001101000101000000000000 t
b1010 ]
b1000 \
b11 [
b101 d
1,
b110111 k
b100100011 r
b100101010 p
b100101010 s
b10010001101000101000000000000 o
b1000101100100100010 q
b10010001101000101010100110111 A
b10010001101000101010100110111 Y
b10010001101000101010100110111 c
b10010001101000101010100110111 j
b10010001101000101010100110111 n
b10010001101000101 V
b1010 X
b110111 W
b100101001000001010011000101001000100000011010010110110101101101 v
1u
#16000
b1 ^
b1 h
b11 0
b11 _
b11 g
b11 m
16
b1001000110100000000000000 &
b1001000110100000000000000 `
b1001000110100000000000000 t
b1011 ]
b110 \
b10010 [
b100 d
13
0,
b10111 k
b10010 r
b1011 p
b100000001010 s
b1001000110100000000000000 o
b110100000000010010 q
b1001000110100010110010111 A
b1001000110100010110010111 Y
b1001000110100010110010111 c
b1001000110100010110010111 j
b1001000110100010110010111 n
b1001000110100 V
b1011 X
b10111 W
b1001100010101010100100100100000011010010110110101101101 v
1u
#17000
b10000010101010101001001010100000100001100100000011010010110110101101101 v
1u
